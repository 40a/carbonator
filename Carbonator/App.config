<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="carbonator" type="Crypton.Carbonator.Config.CarbonatorSection, Crypton.Carbonator"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  
  <!--
    defaultCulture setting specifies which culture set will be used to find Performance Counters
      on non-English Windows installations, performance counter names will be in the localized language
      this setting may be necessary to use English names (e.g. Processor vs. Процессор (ru-RU))
  -->  
  <carbonator defaultCulture="en-US" logType="log4net" collectionInterval="1000">
    <!--
      logType: specifies which type of logging engine to use
          - eventlog: log to Windows Event log using Information/Warning/Error levels (this is the default)
          - log4net:  log to file using log4net (see below for configuration)
          - none:     disable logging
          
      collectionInterval:   specifies how often Performance Counter values are collected in milliseconds
                            decreasing this value will increase metric accuracy at the cost of higher CPU usage by Carbonator
    -->

    <!-- metrics output -->
    <output name="mygraphite">
      <add name="mygraphite" type="graphite" server="my-graphite-server" port="2003"/>
      <add name="myinfluxdb" type="influxdb" postingUrl="http://influxdb.example.org:8086/write?db=mydb"/>
    </output>
    
    <!--
      Carbonator v2 supports graphite and influxdb output types, but only ONE at runtime
      (this is due to differences in configuration and how metrics are named on-the-wire)
      
      Thus, below are examples for each type. Set <output name="nameOfOutput"> to enable that output      
    -->
    
    <!--
      Graphite Output (type=graphite)      
      Configuration attributes:
        server              - specifies graphite server hostname or IP Address
        port                - specifies graphite server port number (2003 is the default)
        prefix              - specifies a metric path prefix (applicable to Hosted Graphite for example)
        reportingInterval   - how often, in seconds, metrics are reported to graphite (default is every 5 seconds)
        bufferSize          - size of the metrics buffer in Carbonator memory (default is 50000).
                              Now new metrics will be accepted if buffer is full (in the event carbon server is not reachable)
        reconnectIntervalMax - Maximum time, in milliseconds, that Carbonator will try to reconnect to the
                               target Graphite server (default - 30000)
        reconnectIntervalStep - Incremental reconnect interval that Carbonator will use to try reconnecting to carbon server
                                (default - 1000)     
                                
      Counter template note:
        The "template" attribute for performance counters below will be used as a template for carbon metric path
    -->
    <!--
      InfluxDB Output (type=influxdb)
      Configuration attributes:
        postingUrl          - URL to which metrics will be posted that includes the database name.
                              Usually a variation of http://influxdb.example.org:8086/write?db=mydb
        bufferSize          - size of the metrics buffer in Carbonator memory (default is 50000)
                              Now new metrics will be accepted if buffer is full (in the event influxdb server is continuously unreachable)
        timeout             - timeout, in seconds, for each POST request to influxdb when sending metrics batch (default - 15)
        maxBatchSize        - maximum number of metrics that will be sent in a batch to influxdb per POST (default is 2500)
        postingInterval     - how often, in seconds, metrics are reported to influxdb (default is every 5 seconds)
        
      Counter template note:
        The "template" attribute for performance counters below will be used as a prefix for the measurement name, and any
        additional tags you would like to include. The value of performance counters will be appended to it.
    --> 
    <counters>
      <!-- 
        Add performance counters to watch:
          path:       carbon/graphite metric path (see above)
        
          category:   performance counter category to load
        
          counter:    performance counter name
        
          instance:   (optional) performance counter instance name, or empty string
                      This attribute supports a regular expression, carbonator will load all instances matching
                      the regular expression when service starts      
      -->
      <!--
        You may use system environment variables or Carbonator-specific variables in templates:
          
          %COUNTER_CATEGORY%  - current counter category name
          %COUNTER_NAME%      - current counter name
          %COUNTER_INSTANCE%  - current counter instance (just underscore for counters without an instance)
          
          %HOST%              - current computer name
          %DOMAIN%            - current active directory domain name
          %ENV_COMPUTERNAME%  - current computer name via System Environment Variables (same as %HOST%)
          %ENV_NUMBER_OF_PROCESSORS% - number of processors
          
          %ENV_...%           - any other system environment variable
          
      -->      
      <!-- template for Graphite Output -->
      <add template="my.data.perf.%DOMAIN%.%HOST%.cpu.%COUNTER_INSTANCE%" category="Processor" counter="% Processor Time" instance="_Total"/>
      <add template="my.data.perf.%HOST%.memAvailable" category="Memory" counter="Available Bytes" instance=""/>
      <add template="my.data.perf.%HOST%.diskFree.%COUNTER_INSTANCE%" category="LogicalDisk" counter="% Free Space" instance=".+"/>
      
      <!-- template for InfluxDB Output -->
      <add template="disk-space,host=%HOST%,env=prod,disk=%COUNTER_INSTANCE%" category="LogicalDisk" counter="% Free Space" instance=".+"/>
      <add template="cpu,host=%HOST%,env=prod" category="Processor" counter="% Processor Time" instance="_Total"/>
    </counters>    
  </carbonator>
  <log4net>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <threshold value="ALL"/>
      <param name="File" value="carbonator.log"/>
      <param name="AppendToFile" value="true"/>
      <param name="encoding" value="utf-8"/>
      <param name="rollingStyle" value="Size"/>
      <param name="maximumFileSize" value="4MB"/>
      <param name="maxSizeRollBackups" value="4"/>
      <param name="PreserveLogFileNameExtension" value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss}[%t] %-5p %m%n"/>
      </layout>
    </appender>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <param name="Header" value="[Header]\r\n"/>
        <param name="Footer" value="[Footer]\r\n"/>
        <param name="ConversionPattern" value="%d [%t] %-5p %m%n"/>
      </layout>
    </appender>
    <root>
      <level value="INFO"/>
      <appender-ref ref="LogFileAppender"/>
      <appender-ref ref="ConsoleAppender"/>
    </root>
  </log4net>  
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1"/></startup></configuration>
